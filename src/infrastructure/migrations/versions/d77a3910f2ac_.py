"""empty message

Revision ID: d77a3910f2ac
Revises: 197c0857bece
Create Date: 2025-06-03 19:44:41.640062

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd77a3910f2ac'
down_revision: Union[str, None] = '197c0857bece'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('booking_tables', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('booking_tables', 'end_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('club_schedules', 'opening_time',
               existing_type=postgresql.TIME(),
               type_=sa.Time(timezone=True),
               existing_nullable=False)
    op.alter_column('club_schedules', 'closing_time',
               existing_type=postgresql.TIME(),
               type_=sa.Time(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('club_schedules', 'closing_time',
               existing_type=sa.Time(timezone=True),
               type_=postgresql.TIME(),
               existing_nullable=False)
    op.alter_column('club_schedules', 'opening_time',
               existing_type=sa.Time(timezone=True),
               type_=postgresql.TIME(),
               existing_nullable=False)
    op.alter_column('booking_tables', 'end_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('booking_tables', 'start_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    # ### end Alembic commands ###
